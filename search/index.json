[{"categories":["documentation"],"contents":"LoveIt theme provides multiple shortcodes on top of built-in ones in Hugo.\n1 style  Note  Hugo extended version is necessary for style shortcode.   style is a shortcode to insert custom style in your post.\nThe style shortcode has two positional parameters.\nThe first one is the custom style content, which supports nesting syntax in :(fab fa-sass fa-fw): SASS and \u0026amp; referring to this parent HTML element.\nAnd the second one is the tag name of the HTML element wrapping the content you want to change style, and whose default value is div.\nExample style input:\n1 2 3  {{\u0026lt; style \u0026#34;text-align:right; strong{color:#00b1ff;}\u0026#34; \u0026gt;}} This is a **right-aligned** paragraph. {{\u0026lt; /style \u0026gt;}}   The rendered output looks like this:\nThis is a right-aligned paragraph. 2 link  link shortcode is an alternative to Markdown link syntax. link shortcode can provide some other features and can be used in code blocks.\n The complete usage of local resource references is supported.\nThe link shortcode has the following named parameters:\n  href [required] (first positional parameter)\nDestination of the link.\n  content [optional] (second positional parameter)\nContent of the link, default value is the value of href parameter.\nMarkdown or HTML format is supported.\n  title [optional] (third positional parameter)\ntitle attribute of the HTML a tag, which will be shown when hovering on the link.\n  class [optional]\nclass attribute of the HTML a tag.\n  rel [optional]\nAdditional rel attributes of the HTML a tag.\n  Example link input:\n1 2 3 4 5 6 7 8 9 10 11  {{\u0026lt; link \u0026#34;https://assemble.io\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://assemble.io\u0026#34; \u0026gt;}} {{\u0026lt; link \u0026#34;mailto:contact@revolunet.com\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;mailto:contact@revolunet.com\u0026#34; \u0026gt;}} {{\u0026lt; link \u0026#34;https://assemble.io\u0026#34; Assemble \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://assemble.io\u0026#34; content=Assemble \u0026gt;}}   The rendered output looks like this:\n https://assemble.io mailto:contact@revolunet.com Assemble  Example link input with a title:\n1 2 3  {{\u0026lt; link \u0026#34;https://github.com/upstage/\u0026#34; Upstage \u0026#34;Visit Upstage!\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://github.com/upstage/\u0026#34; content=Upstage title=\u0026#34;Visit Upstage!\u0026#34; \u0026gt;}}   The rendered output looks like this (hover over the link, there should be a tooltip):\nUpstage 3 image  image shortcode is an alternative to figure shortcode. image shortcode can take full advantage of the dependent libraries of lazysizes and lightgallery.js.\n The complete usage of local resource references is supported.\nThe image shortcode has the following named parameters:\n  src [required] (first positional parameter)\nURL of the image to be displayed.\n  alt [optional] (second positional parameter)\nAlternate text for the image if the image cannot be displayed, default value is the value of src parameter.\nMarkdown or HTML format is supported.\n  caption [optional] (third positional parameter)\nImage caption.\nMarkdown or HTML format is supported.\n  title [optional]\nImage title that will be shown when hovering on the image.\n  class [optional]\nclass attribute of the HTML figure tag.\n  src_s [optional]\nURL of the image thumbnail, used for lightgallery, default value is the value of src parameter.\n  src_l [optional]\nURL of the HD image, used for lightgallery, default value is the value of src parameter.\n  height [optional]\nheight attribute of the image.\n  width [optional]\nwidth attribute of the image.\n  linked [optional]\nWhether the image needs to be hyperlinked, default value is true.\n  rel [optional]\nAdditional rel attributes of the HTML a tag, if linked parameter is set to true.\n  Example image input:\n1  {{\u0026lt; image src=\u0026#34;/images/lighthouse.jpg\u0026#34; caption=\u0026#34;Lighthouse (`image`)\u0026#34; src_s=\u0026#34;/images/lighthouse-small.jpg\u0026#34; src_l=\u0026#34;/images/lighthouse-large.jpg\u0026#34; \u0026gt;}}   The rendered output looks like this:\nLighthouse (image)\" Lighthouse (image)  4 admonition The admonition shortcode supports 12 types of banners to help you put notice in your page.\nMarkdown or HTML format in the content is supported.\nNote  A note banner   Abstract  An abstract banner   Info  A info banner   Tip  A tip banner   Success  A success banner   Question  A question banner   Warning  A warning banner   Failure  A failure banner   Danger  A danger banner   Bug  A bug banner   Example  An example banner   Quote  A quote banner   The admonition shortcode has the following named parameters:\n  type [optional] (first positional parameter)\nType of the admonition banner, default value is note.\n  title [optional] (second positional parameter)\nTitle of the admonition banner, default value is the value of type parameter.\n  open [optional] (third positional parameter) \nWhether the content will be expandable by default, default value is true.\n  Example admonition input:\n1 2 3 4 5 6 7  {{\u0026lt; admonition type=tip title=\u0026#34;This is a tip\u0026#34; open=false \u0026gt;}} A **tip** banner {{\u0026lt; /admonition \u0026gt;}} Or {{\u0026lt; admonition tip \u0026#34;This is a tip\u0026#34; false \u0026gt;}} A **tip** banner {{\u0026lt; /admonition \u0026gt;}}   The rendered output looks like this:\nThis is a tip  A tip banner   5 mermaid mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that’s it.\n5.1 Flowchart Example flowchart mermaid input:\n1 2 3 4 5 6 7  {{\u0026lt; mermaid \u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.2 Sequence Diagram Example sequence diagram mermaid input:\n1 2 3 4 5 6 7 8 9 10 11 12 13  {{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.3 GANTT Example GANTT mermaid input:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  {{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.4 Class Diagram Example class diagram mermaid input:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  {{\u0026lt; mermaid \u0026gt;}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.5 State Diagram Example state diagram mermaid input:\n1 2 3 4 5 6 7 8 9  {{\u0026lt; mermaid \u0026gt;}} stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.6 Git Graph Example git graph mermaid input:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  {{\u0026lt; mermaid \u0026gt;}} gitGraph: options { \u0026#34;nodeSpacing\u0026#34;: 100, \u0026#34;nodeRadius\u0026#34;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 5.7 Pie Example pie mermaid input:\n1 2 3 4 5 6  {{\u0026lt; mermaid \u0026gt;}} pie \u0026#34;Dogs\u0026#34; : 386 \u0026#34;Cats\u0026#34; : 85 \u0026#34;Rats\u0026#34; : 15 {{\u0026lt; /mermaid \u0026gt;}}   The rendered output looks like this:\n 6 echarts ECharts is a library helping you to generate interactive data visualization.\nThe basic chart types ECharts supports include line series, bar series, scatter series, pie charts, candle-stick series, boxplot series for statistics, map series, heatmap series, lines series for directional information, graph series for relationships, treemap series, sunburst series, parallel series for multi-dimensional data, funnel series, gauge series. And it\u0026rsquo;s extremely easy to create a combinition of them with ECharts.\nJust insert your ECharts option in JSON/YAML/TOML format in the echarts shortcode and that’s it.\nExample echarts input in JSON format:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  {{\u0026lt; echarts \u0026gt;}} { \u0026#34;title\u0026#34;: { \u0026#34;text\u0026#34;: \u0026#34;Summary Line Chart\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;2%\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;center\u0026#34; }, \u0026#34;tooltip\u0026#34;: { \u0026#34;trigger\u0026#34;: \u0026#34;axis\u0026#34; }, \u0026#34;legend\u0026#34;: { \u0026#34;data\u0026#34;: [\u0026#34;Email Marketing\u0026#34;, \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;Video Advertising\u0026#34;, \u0026#34;Direct View\u0026#34;, \u0026#34;Search Engine\u0026#34;], \u0026#34;top\u0026#34;: \u0026#34;10%\u0026#34; }, \u0026#34;grid\u0026#34;: { \u0026#34;left\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;right\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;bottom\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;20%\u0026#34;, \u0026#34;containLabel\u0026#34;: true }, \u0026#34;toolbox\u0026#34;: { \u0026#34;feature\u0026#34;: { \u0026#34;saveAsImage\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Save as Image\u0026#34; } } }, \u0026#34;xAxis\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;category\u0026#34;, \u0026#34;boundaryGap\u0026#34;: false, \u0026#34;data\u0026#34;: [\u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;, \u0026#34;Saturday\u0026#34;, \u0026#34;Sunday\u0026#34;] }, \u0026#34;yAxis\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;value\u0026#34; }, \u0026#34;series\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Email Marketing\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [120, 132, 101, 134, 90, 230, 210] }, { \u0026#34;name\u0026#34;: \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [220, 182, 191, 234, 290, 330, 310] }, { \u0026#34;name\u0026#34;: \u0026#34;Video Advertising\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [150, 232, 201, 154, 190, 330, 410] }, { \u0026#34;name\u0026#34;: \u0026#34;Direct View\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [320, 332, 301, 334, 390, 330, 320] }, { \u0026#34;name\u0026#34;: \u0026#34;Search Engine\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u0026lt; /echarts \u0026gt;}}   The same in YAML format:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95  {{\u0026lt; echarts \u0026gt;}}title:text:Summary Line Charttop:2%left:centertooltip:trigger:axislegend:data:- Email Marketing- Affiliate Advertising- Video Advertising- Direct View- Search Enginetop:10%grid:left:5%right:5%bottom:5%top:20%containLabel:truetoolbox:feature:saveAsImage:title:Save as ImagexAxis:type:categoryboundaryGap:falsedata:- Monday- Tuesday- Wednesday- Thursday- Friday- Saturday- SundayyAxis:type:valueseries:- name:Email Marketingtype:linestack:Totaldata:- 120- 132- 101- 134- 90- 230- 210- name:Affiliate Advertisingtype:linestack:Totaldata:- 220- 182- 191- 234- 290- 330- 310- name:Video Advertisingtype:linestack:Totaldata:- 150- 232- 201- 154- 190- 330- 410- name:Direct Viewtype:linestack:Totaldata:- 320- 332- 301- 334- 390- 330- 320- name:Search Enginetype:linestack:Totaldata:- 820- 932- 901- 934- 1290- 1330- 1320{{\u0026lt; /echarts \u0026gt;}}  The same in TOML format:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117  {{\u0026lt; echarts \u0026gt;}} [title] text = \u0026#34;Summary Line Chart\u0026#34; top = \u0026#34;2%\u0026#34; left = \u0026#34;center\u0026#34; [tooltip] trigger = \u0026#34;axis\u0026#34; [legend] data = [ \u0026#34;Email Marketing\u0026#34;, \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;Video Advertising\u0026#34;, \u0026#34;Direct View\u0026#34;, \u0026#34;Search Engine\u0026#34; ] top = \u0026#34;10%\u0026#34; [grid] left = \u0026#34;5%\u0026#34; right = \u0026#34;5%\u0026#34; bottom = \u0026#34;5%\u0026#34; top = \u0026#34;20%\u0026#34; containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \u0026#34;Save as Image\u0026#34; [xAxis] type = \u0026#34;category\u0026#34; boundaryGap = false data = [ \u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;, \u0026#34;Saturday\u0026#34;, \u0026#34;Sunday\u0026#34; ] [yAxis] type = \u0026#34;value\u0026#34; [[series]] name = \u0026#34;Email Marketing\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \u0026#34;Affiliate Advertising\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \u0026#34;Video Advertising\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \u0026#34;Direct View\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \u0026#34;Search Engine\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 820.0, 932.0, 901.0, 934.0, 1290.0, 1330.0, 1320.0 ] {{\u0026lt; /echarts \u0026gt;}}   The rendered output looks like this:\n The echarts shortcode has also the following named parameters:\n  width [optional] (first positional parameter)\n Width of the data visualization, default value is 100%.\n  height [optional] (second positional parameter)\n Height of the data visualization, default value is 30rem.\n  7 mapbox  Mapbox GL JS is a JavaScript library that uses WebGL to render interactive maps from vector tiles and Mapbox styles.\nThe mapbox shortcode has the following named parameters to use Mapbox GL JS:\n  lng [required] (first positional parameter)\nLongitude of the inital centerpoint of the map, measured in degrees.\n  lat [required] (second positional parameter)\nLatitude of the inital centerpoint of the map, measured in degrees.\n  zoom [optional] (third positional parameter)\nThe initial zoom level of the map, default value is 10.\n  marked [optional] (fourth positional parameter)\nWhether to add a marker at the inital centerpoint of the map, default value is true.\n  light-style [optional] (fifth positional parameter)\nStyle for the light theme, default value is the value set in the front matter or the site configuration.\n  dark-style [optional] (sixth positional parameter)\nStyle for the dark theme, default value is the value set in the front matter or the site configuration.\n  navigation [optional]\nWhether to add NavigationControl, default value is the value set in the front matter or the site configuration.\n  geolocate [optional]\nWhether to add GeolocateControl, default value is the value set in the front matter or the site configuration.\n  scale [optional]\nWhether to add ScaleControl, default value is the value set in the front matter or the site configuration.\n  fullscreen [optional]\nWhether to add FullscreenControl, default value is the value set in the front matter or the site configuration.\n  width [optional]\nWidth of the map, default value is 100%.\n  height [optional]\nHeight of the map, default value is 20rem.\n  Example simple mapbox input:\n1 2 3  {{\u0026lt; mapbox 121.485 31.233 12 \u0026gt;}} Or {{\u0026lt; mapbox lng=121.485 lat=31.233 zoom=12 \u0026gt;}}   The rendered output looks like this:\n Example mapbox input with the custom style:\n1 2 3  {{\u0026lt; mapbox -122.252 37.453 10 false \u0026#34;mapbox://styles/mapbox/navigation-preview-day-v4\u0026#34; \u0026#34;mapbox://styles/mapbox/navigation-preview-night-v4\u0026#34; \u0026gt;}} Or {{\u0026lt; mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\u0026#34;mapbox://styles/mapbox/navigation-preview-day-v4\u0026#34; dark-style=\u0026#34;mapbox://styles/mapbox/navigation-preview-night-v4\u0026#34; \u0026gt;}}   The rendered output looks like this:\n 8 music The music shortcode embeds a responsive music player based on APlayer and MetingJS.\nThere are three ways to use it the music shortcode.\n8.1 Custom Music URL  The complete usage of local resource references is supported.\nThe music shortcode has the following named parameters by custom music URL:\n  server [required]\nURL of the custom music.\n  name [optional]\nName of the custom music.\n  artist [optional]\nArtist of the custom music.\n  cover [required]\nURL of the custom music cover.\n  Example music input by custom music URL:\n1  {{\u0026lt; music url=\u0026#34;/music/Wavelength.mp3\u0026#34; name=Wavelength artist=oldmanyoung cover=\u0026#34;/images/Wavelength.jpg\u0026#34; \u0026gt;}}   The rendered output looks like this:\n 8.2 Music Platform URL Automatic Identification The music shortcode has one named parameter by music platform URL automatic identification:\n  auto [required] (first positional parameter)\nURL of the music platform URL for automatic identification, which supports netease, tencent and xiami music platform.\n  Example music input by music platform URL automatic identification:\n1 2 3  {{\u0026lt; music auto=\u0026#34;https://music.163.com/#/playlist?id=60198\u0026#34; \u0026gt;}} Or {{\u0026lt; music \u0026#34;https://music.163.com/#/playlist?id=60198\u0026#34; \u0026gt;}}   The rendered output looks like this:\n 8.3 Custom Server, Type and ID The music shortcode has the following named parameters by custom music platform:\n  server [required] (first positional parameter)\n[netease, tencent, kugou, xiami, baidu]\nMusic platform.\n  type [required] (second positional parameter)\n[song, playlist, album, search, artist]\nType of the music.\n  id [required] (third positional parameter)\nSong ID, or playlist ID, or album ID, or search keyword, or artist ID.\n  Example music input by custom music platform:\n1 2 3  {{\u0026lt; music server=\u0026#34;netease\u0026#34; type=\u0026#34;song\u0026#34; id=\u0026#34;1868553\u0026#34; \u0026gt;}} Or {{\u0026lt; music netease song 1868553 \u0026gt;}}   The rendered output looks like this:\n 8.4 Other Parameters The music shortcode has other named parameters applying to the above three ways:\n  theme [optional]\n Main color of the music player, default value is #448aff.\n  fixed [optional]\nWhether to enable fixed mode, default value is false.\n  mini [optional]\nWhether to enable mini mode, default value is false.\n  autoplay [optional]\nWhether to autoplay music, default value is false.\n  volume [optional]\nDefault volume when the player is first opened, which will be remembered in the browser, default value is 0.7.\n  mutex [optional]\nWhether to pause other players when this player starts playing, default value is true.\n  The music shortcode has the following named parameters only applying to the type of music list:\n  loop [optional]\n[all, one, none]\nLoop mode of the music list, default value is none.\n  order [optional]\n[list, random]\nPlay order of the music list, default value is list.\n  list-folded [optional]\nWhether the music list should be folded at first, default value is false.\n  list-max-height [optional]\nMax height of the music list, default value is 340px.\n  9 bilibili  The bilibili shortcode embeds a responsive video player for bilibili videos.\nWhen the video only has one part, only the BV id of the video is required, e.g.:\n1  https://www.bilibili.com/video/BV1Sx411T7QQ   Example bilibili input:\n1 2 3  {{\u0026lt; bilibili BV1Sx411T7QQ \u0026gt;}} Or {{\u0026lt; bilibili id=BV1Sx411T7QQ \u0026gt;}}   The rendered output looks like this:\n When the video has multiple parts, in addition to the BV id of the video, p is also required, whose default value is 1, e.g.:\n1  https://www.bilibili.com/video/BV1TJ411C7An?p=3   Example bilibili input with p:\n1 2 3  {{\u0026lt; bilibili BV1TJ411C7An 3 \u0026gt;}} Or {{\u0026lt; bilibili id=BV1TJ411C7An p=3 \u0026gt;}}   The rendered output looks like this:\n 10 typeit The typeit shortcode provides typing animation based on TypeIt.\nJust insert your content in the typeit shortcode and that’s it.\n10.1 Simple Content Simple content is allowed in Markdown format and without rich block content such as images and more\u0026hellip;\nExample typeit input:\n1 2 3  {{\u0026lt; typeit \u0026gt;}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u0026lt; /typeit \u0026gt;}}   The rendered output looks like this:\n Alternatively, you can use custom HTML tags.\nExample typeit input with h4 tag:\n1 2 3  {{\u0026lt; typeit tag=h4 \u0026gt;}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u0026lt; /typeit \u0026gt;}}   The rendered output looks like this:\n 10.2 Code Content Code content is allowed and will be highlighted by named parameter code for the type of code language.\nExample typeit input with code:\n1 2 3 4 5 6 7  {{\u0026lt; typeit code=java \u0026gt;}} public class HelloWorld { public static void main(String []args) { System.out.println(\u0026#34;Hello World\u0026#34;); } } {{\u0026lt; /typeit \u0026gt;}}   The rendered output looks like this:\n 10.3 Group Content All typing animations start at the same time by default. But sometimes you may want to start a set of typeit contents in order.\nA set of typeit contents with the same value of named parameter group will start typing animation in sequence.\nExample typeit input with group:\n1 2 3 4 5 6 7  {{\u0026lt; typeit group=paragraph \u0026gt;}} **First** this paragraph begins {{\u0026lt; /typeit \u0026gt;}} {{\u0026lt; typeit group=paragraph \u0026gt;}} **Then** this paragraph begins {{\u0026lt; /typeit \u0026gt;}}   The rendered output looks like this:\n  11 script  script is a shortcode to insert custom :(fab fa-js fa-fw): Javascript in your post.\nNote  The script content can be guaranteed to be executed in order after all third-party libraries are loaded. So you are free to use third-party libraries.   Example script input:\n1 2 3  {{\u0026lt; script \u0026gt;}} console.log(\u0026#39;Hello LoveIt!\u0026#39;); {{\u0026lt; /script \u0026gt;}}   You can see the output in the console of the developer tool.\n","permalink":"https://Isaray.github.io/theme-documentation-extended-shortcodes/","tags":["shortcodes"],"title":"Theme Documentation - Extended Shortcodes"},{"categories":["Tutorial"],"contents":"Build our own website by using Hugo on Wins Lighthouse (image)\" Lighthouse (image)  Install Hugo There are so many tutorials for installing hugo on macOS and Linux, and this blog mainly fucuses on how to install hugo on Windows.\nAnd I recommend using method two.\nMethod One： Using Official Docs Hugo official installation file：\nInstall Hugo | Hugo (gohugo.io)\nFirst, make sure you have chocolatey on your laptop with Windows system.\n1. Install chocolatey on Windows Chocolatey Software Docs | Setup / Install\n Please remember to start a command prompt as an administrator.\n run the following command:\n1  @\u0026#34;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#34; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \u0026#34;[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://community.chocolatey.org/install.ps1\u0026#39;))\u0026#34; \u0026amp;\u0026amp; SET \u0026#34;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\u0026#34;   Check whether hugo is installed successfully with the following command:\n1  choco help   2.Install Hugo with Chocolatey\nIf you are on a Windows machine and use Chocolatey for package management, you can install Hugo with the following one-liner:\ninstall-with-chocolatey.ps1\n1  choco install hugo -confirm   Or if you need the “extended” Sass/SCSS version:\ninstall-extended-with-chocolatey.ps1\n1  choco install hugo-extended -confirm   Method Two：Download hugo.exe directly 1.Download Hugo Releases · gohugoio/hugo (github.com)\n Download the certain version you need. Some website themes have requirements of hugo version.\n 2. Set Environment Variables Set the folder of hugo.exe as environment variables.\nThen, open another command line to check whether it is successfully set or not. Run the command in CMD:\nhugo version\nThemes I Prefered There are many themes on the official websites.\nComplete List | Hugo Themes (gohugo.io)\nPersonally I prefered the following themes.\nAcademic | Hugo Themes (gohugo.io)\nAcademic | Hugo Themes (gohugo.io)\nPaperMod | Hugo Themes (gohugo.io)\nEven | Hugo Themes (gohugo.io)\nTranquilpeak | Hugo Themes (gohugo.io)\nClean White | Hugo Themes (gohugo.io)\nLoveIt | Hugo Themes (gohugo.io)\nI use the theme LoveIt.\nLoveIt (hugoloveit.com)\nInstall it according to the official document and try to build demo yourself.\nTheme Documentation - Basics - LoveIt (hugoloveit.com)\nYou can also follow the steps in this video. Although it is on the MacOS system, she explained everything clearly in Chinese.\nHugo - 10分钟搭建 \u0026amp; 部署个人网站/博客，简历中的博客网站怎么建哔哩哔哩bilibili\n Memos Important Command 1.hugo serve Executehugo serve under the root folder of the project, click http://localhost:1313/ to visit your website locally.\n2.hugo  make sure that in the config.toml , it is written like baseUrl=\u0026ldquo;https://[username].github.io\u0026rdquo; Executehugo under the root folder of the project. For the first time you do it, the public folder will be made. If there is any mistake when compiling, it is recomended to delete all files in the public folder before execute hugo.  Publish on GitHub Pages   new a repository，setting it to public。\n  Set the address of your blog [username].github.io at setting/pages. Set the branch to master if you use it.\n  Executehugo under the root folder of the project. For the first time you do it, the public folder will be made.(make sure that in the config.toml , it is written like baseUrl=\u0026ldquo;https://[username].github.io\u0026rdquo;)\ncd public, run the command:\n1 2 3 4 5  git init git add . git commit -m\u0026#34;first commit\u0026#34; git add remote origin \u0026#34;your reposotory address\u0026#34; git push -u origin master     Wait a few minites，and you can visit your website on https://[username].github.io.\ntips:\n If the your website doesn\u0026rsquo;t change after a sucessful push, please check the actions of repository. The compiling of new github pages probably failed.\n  If there is any mistake when compiling, it is recomended to delete all files in the public folder before execute hugo.\n Some mistakes I met If the style/css of the website went wrong, you should check the url and address in index.html page. Perhaps the baseUrl is wrong.\nThe Extended Functions of LoveIt： Hugo系列(3.0) - LoveIt主题美化与博客功能增强 · 第一章 - Yulin Lewis' Blog (lewky.cn)\nThere are four blogs in the link , including the improvements of searching！\nThe official link is also helpful.\nTheme Documentation - Extended Shortcodes - LoveIt (hugoloveit.com)\nSave My config.toml I revise the config.toml according to the offical demo and files,\nincluding:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  [params.header.title] # LOGO 的 URL logo = \u0026#34;\u0026#34; # 标题名称 name = \u0026#34;xxx\u0026#34; [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \u0026#34;\u0026#34; # 主页显示头像的 URL avatarURL = \u0026#34;/images/avatar.png\u0026#34; # 主页显示的网站标题 (支持 HTML 格式) title = \u0026#34;xxx\u0026#34; # 主页显示的网站副标题 subtitle = \u0026#34;这是我的全新 Hugo 网站\u0026#34; # 是否保持使用文章前面的静态目录 keepStatic = false [params.list] # list 页面每页显示文章数量 paginate = 10 ...   Here is my config.toml\nI delete the function of comments, because it goes wrong on github pages.\nbaseURL = \u0026#34;https://xxx.github.io/\u0026#34; # [en, zh-cn, fr, ...] determines default content language defaultContentLanguage = \u0026#34;en\u0026#34; # language code languageCode = \u0026#34;en\u0026#34; title = \u0026#34;xxx\u0026#39;s blog\u0026#34; # Change the default theme to be use when building the site with Hugo theme = [\u0026#34;hugo-search-fuse-js\u0026#34;,\u0026#34;LoveIt\u0026#34;] # whether to use emoji code # 是否使用 emoji 代码 enableEmoji = true [menu] [[menu.main]] identifier = \u0026#34;posts\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; name = \u0026#34;Posts\u0026#34; url = \u0026#34;/posts/\u0026#34; # title will be shown when you hover on this menu link title = \u0026#34;\u0026#34; weight = 1 [[menu.main]] identifier = \u0026#34;projects\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; name = \u0026#34;Projects\u0026#34; url = \u0026#34;/categories/projects/\u0026#34; # title will be shown when you hover on this menu link title = \u0026#34;\u0026#34; weight = 1 [[menu.main]] identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; weight = 2 [[menu.main]] identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Categories\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; weight = 3 [[menu.main]] identifier = \u0026#34;about\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;About\u0026#34; url = \u0026#34;/about/\u0026#34; title = \u0026#34;\u0026#34; weight = 5 [[menu.main]] pre = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-fw fa-search\u0026#39;\u0026gt;\u0026lt;/i\u0026gt;\u0026#34; name = \u0026#34;search\u0026#34; weight = 7 identifier = \u0026#34;search\u0026#34; url = \u0026#34;/search/\u0026#34; [params] # LoveIt 主题版本 version = \u0026#34;0.2.X\u0026#34; # 网站描述 description = \u0026#34;这是我的全新 Hugo 网站\u0026#34; # 网站关键词 keywords = [\u0026#34;Theme\u0026#34;, \u0026#34;Hugo\u0026#34;] # 网站默认主题样式 (\u0026#34;light\u0026#34;, \u0026#34;dark\u0026#34;, \u0026#34;auto\u0026#34;) defaultTheme = \u0026#34;auto\u0026#34; # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \u0026#34;\u0026#34; # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # (\u0026#34;sha256\u0026#34;, \u0026#34;sha384\u0026#34;, \u0026#34;sha512\u0026#34;, \u0026#34;md5\u0026#34;) fingerprint = \u0026#34;\u0026#34; # 日期格式 dateFormat = \u0026#34;2006-01-02\u0026#34; # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\u0026#34;/logo.png\u0026#34;] # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \u0026#34;LoveIt\u0026#34; # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \u0026#34;\u0026#34; # Android 浏览器主题色 themeColor = \u0026#34;#ffffff\u0026#34; # Safari 图标颜色 iconColor = \u0026#34;#5bbad5\u0026#34; # Windows v8-10磁贴颜色 tileColor = \u0026#34;#da532c\u0026#34; # 搜索配置 [params.search] enable = false # 搜索引擎的类型 (\u0026#34;lunr\u0026#34;, \u0026#34;algolia\u0026#34;) type = \u0026#34;lunr\u0026#34; # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \u0026#34;\u0026#34; # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \u0026#34;em\u0026#34; # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \u0026#34;\u0026#34; appID = \u0026#34;\u0026#34; searchKey = \u0026#34;\u0026#34; # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 (\u0026#34;fixed\u0026#34;, \u0026#34;normal\u0026#34;, \u0026#34;auto\u0026#34;) desktopMode = \u0026#34;fixed\u0026#34; # 移动端导航栏模式 (\u0026#34;fixed\u0026#34;, \u0026#34;normal\u0026#34;, \u0026#34;auto\u0026#34;) mobileMode = \u0026#34;auto\u0026#34; # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \u0026#34;\u0026#34; # 标题名称 name = \u0026#34;Isaray\u0026#39;s blog\u0026#34; # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \u0026#34;\u0026#34; # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \u0026#34;\u0026#34; # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = \u0026#39;\u0026#39; # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \u0026#34;\u0026#34; # 许可协议信息 (支持 HTML 格式) license = \u0026#39;\u0026lt;a rel=\u0026#34;license external nofollow noopener noreffer\u0026#34; href=\u0026#34;https://creativecommons.org/licenses/by-nc/4.0/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;CC BY-NC 4.0\u0026lt;/a\u0026gt;\u0026#39; # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 10 # 日期格式 (月和日) dateFormat = \u0026#34;01-02\u0026#34; # RSS 文章数目 rss = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 10 # 日期格式 (月和日) dateFormat = \u0026#34;01-02\u0026#34; # RSS 文章数目 rss = 10 # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \u0026#34;\u0026#34; # 主页显示头像的 URL avatarURL = \u0026#34;/images/avatar.png\u0026#34; # 主页显示的网站标题 (支持 HTML 格式) title = \u0026#34;xxx\u0026#34; # 主页显示的网站副标题 subtitle = \u0026#34;A student major in Data Science and Engineering.\u0026#34; # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \u0026#34;\u0026#34; # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \u0026#34;hiddenFromHomePage\u0026#34; 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.social] GitHub = \u0026#34;https://github.com/Isaray\u0026#34; Linkedin = \u0026#34;xxxx\u0026#34; Twitter = \u0026#34;\u0026#34; Instagram = \u0026#34;xxxx\u0026#34; Facebook = \u0026#34;\u0026#34; Telegram = \u0026#34;xxxx\u0026#34; Medium = \u0026#34;\u0026#34; Gitlab = \u0026#34;\u0026#34; Youtubelegacy = \u0026#34;\u0026#34; Youtubecustom = \u0026#34;\u0026#34; Youtubechannel = \u0026#34;\u0026#34; Tumblr = \u0026#34;\u0026#34; Quora = \u0026#34;\u0026#34; Keybase = \u0026#34;\u0026#34; Pinterest = \u0026#34;\u0026#34; Reddit = \u0026#34;\u0026#34; Codepen = \u0026#34;\u0026#34; FreeCodeCamp = \u0026#34;\u0026#34; Bitbucket = \u0026#34;\u0026#34; Stackoverflow = \u0026#34;\u0026#34; Weibo = \u0026#34;\u0026#34; Odnoklassniki = \u0026#34;\u0026#34; VK = \u0026#34;\u0026#34; Flickr = \u0026#34;\u0026#34; Xing = \u0026#34;\u0026#34; Snapchat = \u0026#34;\u0026#34; Soundcloud = \u0026#34;\u0026#34; Spotify = \u0026#34;\u0026#34; Bandcamp = \u0026#34;\u0026#34; Paypal = \u0026#34;\u0026#34; Fivehundredpx = \u0026#34;\u0026#34; Mix = \u0026#34;\u0026#34; Goodreads = \u0026#34;\u0026#34; Lastfm = \u0026#34;\u0026#34; Foursquare = \u0026#34;\u0026#34; Hackernews = \u0026#34;\u0026#34; Kickstarter = \u0026#34;\u0026#34; Patreon = \u0026#34;\u0026#34; Steam = \u0026#34;\u0026#34; Twitch = \u0026#34;\u0026#34; Strava = \u0026#34;\u0026#34; Skype = \u0026#34;\u0026#34; Whatsapp = \u0026#34;\u0026#34; Zhihu = \u0026#34;\u0026#34; Douban = \u0026#34;\u0026#34; Angellist = \u0026#34;\u0026#34; Slidershare = \u0026#34;\u0026#34; Jsfiddle = \u0026#34;\u0026#34; Deviantart = \u0026#34;\u0026#34; Behance = \u0026#34;\u0026#34; Dribbble = \u0026#34;\u0026#34; Wordpress = \u0026#34;\u0026#34; Vine = \u0026#34;\u0026#34; Googlescholar = \u0026#34;\u0026#34; Researchgate = \u0026#34;\u0026#34; Mastodon = \u0026#34;\u0026#34; Thingiverse = \u0026#34;\u0026#34; Devto = \u0026#34;\u0026#34; Gitea = \u0026#34;\u0026#34; XMPP = \u0026#34;\u0026#34; Matrix = \u0026#34;\u0026#34; Bilibili = \u0026#34;\u0026#34; Email = \u0026#34;xxxx@xxxx.com\u0026#34; RSS = true # # 文章页面配置 [params.page] # 是否在主页隐藏一篇文章 hiddenFromHomePage = false # 是否在搜索结果中隐藏一篇文章 hiddenFromSearch = false # 是否使用 twemoji twemoji = false # 是否使用 lightgallery lightgallery = false # 是否使用 ruby 扩展语法 ruby = true # 是否使用 fraction 扩展语法 fraction = true # 是否使用 fontawesome 扩展语法 fontawesome = true # 是否在文章页面显示原始 Markdown 文档链接 linkToMarkdown = true # 是否在 RSS 中显示全文内容 rssFullText = false # 目录配置 [params.page.toc] # 是否使用目录 enable = true # 是否保持使用文章前面的静态目录 #修改为动态 keepStatic = false # 是否使侧边目录自动折叠展开 auto = true # 代码配置 [params.page.code] # 是否显示代码块的复制按钮 copy = true # 默认展开显示的代码行数 maxShownLines = 10 # KaTeX 数学公式 [params.page.math] enable = true # 默认块定界符是 $$ ... $$ 和 \\\\[ ... \\\\] blockLeftDelimiter = \u0026#34;\u0026#34; blockRightDelimiter = \u0026#34;\u0026#34; # 默认行内定界符是 $ ... $ 和 \\\\( ... \\\\) inlineLeftDelimiter = \u0026#34;\u0026#34; inlineRightDelimiter = \u0026#34;\u0026#34; # KaTeX 插件 copy_tex copyTex = true # KaTeX 插件 mhchem mhchem = true # Mapbox GL JS 配置 [params.page.mapbox] # Mapbox GL JS 的 access token accessToken = \u0026#34;\u0026#34; # 浅色主题的地图样式 lightStyle = \u0026#34;mapbox://styles/mapbox/light-v9\u0026#34; # 深色主题的地图样式 darkStyle = \u0026#34;mapbox://styles/mapbox/dark-v9\u0026#34; # 是否添加 NavigationControl navigation = true # 是否添加 GeolocateControl geolocate = true # 是否添加 ScaleControl scale = true # 是否添加 FullscreenControl fullscreen = true # 文章页面的分享信息设置 [params.page.share] enable = true Twitter = true Facebook = true Linkedin = false Whatsapp = true Pinterest = false Tumblr = false HackerNews = false Reddit = false VK = false Buffer = false Xing = false Line = true Instapaper = false Pocket = false Digg = false Stumbleupon = false Flipboard = false Weibo = true Renren = false Myspace = true Blogger = true Baidu = false Odnoklassniki = false Evernote = true Skype = false Trello = false Mix = false # 第三方库配置 [params.page.library] [params.page.library.css] # someCSS = \u0026#34;some.css\u0026#34; # 位于 \u0026#34;assets/\u0026#34; # 或者 # someCSS = \u0026#34;https://cdn.example.com/some.css\u0026#34; [params.page.library.js] # someJavascript = \u0026#34;some.js\u0026#34; # 位于 \u0026#34;assets/\u0026#34; # 或者 # someJavascript = \u0026#34;https://cdn.example.com/some.js\u0026#34; # 页面 SEO 配置 [params.page.seo] # 图片 URL images = [] # 出版者信息 [params.page.seo.publisher] name = \u0026#34;\u0026#34; logoUrl = \u0026#34;\u0026#34; # TypeIt 配置 [params.typeit] # 每一步的打字速度 (单位是毫秒) speed = 100 # 光标的闪烁速度 (单位是毫秒) cursorSpeed = 1000 # 光标的字符 (支持 HTML 格式) cursorChar = \u0026#34;|\u0026#34; # 打字结束之后光标的持续时间 (单位是毫秒, \u0026#34;-1\u0026#34; 代表无限大) duration = -1 # 网站验证代码，用于 Google/Bing/Yandex/Pinterest/Baidu [params.verification] google = \u0026#34;\u0026#34; bing = \u0026#34;\u0026#34; yandex = \u0026#34;\u0026#34; pinterest = \u0026#34;\u0026#34; baidu = \u0026#34;\u0026#34; # 网站 SEO 配置 [params.seo] # 图片 URL image = \u0026#34;\u0026#34; # 缩略图 URL thumbnailUrl = \u0026#34;\u0026#34; # 网站分析配置 [params.analytics] enable = false # Google Analytics [params.analytics.google] id = \u0026#34;\u0026#34; # 是否匿名化用户 IP anonymizeIP = true # Fathom Analytics [params.analytics.fathom] id = \u0026#34;\u0026#34; # 自行托管追踪器时的主机路径 server = \u0026#34;\u0026#34; # Cookie 许可配置 [params.cookieconsent] enable = true # 用于 Cookie 许可横幅的文本字符串 [params.cookieconsent.content] message = \u0026#34;\u0026#34; dismiss = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; # 第三方库文件的 CDN 设置 [params.cdn] # CDN 数据文件名称, 默认不启用 # (\u0026#34;jsdelivr.yml\u0026#34;) # 位于 \u0026#34;themes/LoveIt/assets/data/cdn/\u0026#34; 目录 # 可以在你的项目下相同路径存放你自己的数据文件: # \u0026#34;assets/data/cdn/\u0026#34; data = \u0026#34;\u0026#34; # 兼容性设置 [params.compatibility] # 是否使用 Polyfill.io 来兼容旧式浏览器 polyfill = false # 是否使用 object-fit-images 来兼容旧式浏览器 objectFit = false # Hugo 解析文档的配置 [markup] # 语法高亮设置 [markup.highlight] codeFences = true guessSyntax = true lineNos = true lineNumbersInTable = true # false 是必要的设置 # (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false # Goldmark 是 Hugo 0.60 以来的默认 Markdown 解析库 [markup.goldmark] [markup.goldmark.extensions] definitionList = true footnote = true linkify = true strikethrough = true table = true taskList = true typographer = true [markup.goldmark.renderer] # 是否在文档中直接使用 HTML 标签 unsafe = true # 目录设置 [markup.tableOfContents] startLevel = 2 endLevel = 6 # 作者配置 [author] name = \u0026#34;Isaray\u0026#34; email = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; # 网站地图配置 [sitemap] changefreq = \u0026#34;weekly\u0026#34; filename = \u0026#34;sitemap.xml\u0026#34; priority = 0.5 # Permalinks 配置 [Permalinks] # posts = \u0026#34;:year/:month/:filename\u0026#34; posts = \u0026#34;:filename\u0026#34; # 隐私信息配置 [privacy] # Google Analytics 相关隐私 (被 params.analytics.google 替代) [privacy.googleAnalytics] # ... [privacy.twitter] enableDNT = true [privacy.youtube] privacyEnhanced = true # 用于输出 Markdown 格式文档的设置 [mediaTypes] [mediaTypes.\u0026#34;text/plain\u0026#34;] suffixes = [\u0026#34;md\u0026#34;] # 用于输出 Markdown 格式文档的设置 [outputFormats.MarkDown] mediaType = \u0026#34;text/plain\u0026#34; isPlainText = true isHTML = false # 用于 Hugo 输出文档的设置 [outputs] # home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] page = [\u0026#34;HTML\u0026#34;, \u0026#34;MarkDown\u0026#34;] section = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] taxonomy = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] taxonomyTerm = [\u0026#34;HTML\u0026#34;]   ","permalink":"https://Isaray.github.io/build_websites_with_hugo/","tags":["Hugo","Installation"],"title":"How to build our own websites with Hugo on Windows?"},{"categories":null,"contents":"CJ Lei\nA student major in data science and engineering.\nLet\u0026rsquo;s listen to some music!\n ","permalink":"https://Isaray.github.io/about/","tags":null,"title":"About Me"},{"categories":null,"contents":"","permalink":"https://Isaray.github.io/search/","tags":null,"title":"Search"}]